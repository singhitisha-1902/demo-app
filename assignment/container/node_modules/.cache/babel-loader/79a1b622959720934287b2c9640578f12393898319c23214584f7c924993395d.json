{"ast":null,"code":"var _jsxFileName = \"/Users/itsingh/Desktop/assignment/user/src/Login.js\",\n  _s = $RefreshSig$();\n// import React, {useState} from 'react'\n// const Login=()=>{\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n\n//   const handleLogin = () => {\n//     // Simple validation\n//     if (!username.includes('@') || !username.includes('.') || password.length < 8) {\n//       setError('Invalid username or password.');\n//     } else {\n//       // Mocking authentication\n//       // Replace this with actual authentication logic (e.g., calling an API)\n//       if (username === 'example@email.com' && password === 'password123') {\n//         // Redirect to home page on successful login\n//         console.log('success')\n//         // window.location.href = '/home'; // You can use react-router for better navigation\n//       } else {\n//         setError('Invalid username or password.');\n//       }\n//     }\n//     return(\n//        <div>\n//         <h1>Login</h1>\n//         <form onSubmit={handleLogin}>\n//             <div>\n//                <label htmlFor=\"username\">Username/Email</label>\n//                 <input>\n//                 type=\"email\"\n//                 id=\"username\"\n//                 value={username}\n//                 onChange={(e)=>setUsername(e.target.value)}\n//                 </input>\n//             </div>\n//             <div>\n//                <label htmlFor=\"password\">Password:</label>\n//                 <input>\n//                 type=\"password\"\n//                 id=\"password\"\n//                 value={password}\n//                 onChange={(e)=>setPassword(e.target.value)}\n//                 </input>\n//             </div>\n//             <button type=\"submit\">Login</button>\n//         </form>\n\n//        </div>\n\n//     );\n\n// }\n// }\n// export default Login;\nimport React, { useState } from 'react';\n\n// Functional component for Login\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  // State variables for username, password, and error messages\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  // Function to handle form submission\n  const handleLogin = e => {\n    e.preventDefault();\n\n    // Validate email format\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(username)) {\n      setError('Invalid email format');\n      return;\n    }\n\n    // Validate password length\n    if (password.length < 8) {\n      setError('Password must be at least 8 characters');\n      return;\n    }\n\n    // Perform authentication logic (You can replace this with your actual authentication logic)\n    // For demonstration purposes, considering a simple check with predefined credentials\n    const validCredentials = {\n      username: 'user@example.com',\n      password: 'password123'\n    };\n    if (username === validCredentials.username && password === validCredentials.password) {\n      // Successful login, you can navigate to the Home page or perform other actions\n      console.log('Login successful');\n      // Redirect to the Home page or perform other actions here\n    } else {\n      setError('Invalid username or password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username (Email):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"lABZ+K3zbnEaFQvlduiFXLNOf5A=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","error","setError","handleLogin","e","preventDefault","emailRegex","test","length","validCredentials","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","style","color","_c","$RefreshReg$"],"sources":["/Users/itsingh/Desktop/assignment/user/src/Login.js"],"sourcesContent":["// import React, {useState} from 'react'\n// const Login=()=>{\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n\n//   const handleLogin = () => {\n//     // Simple validation\n//     if (!username.includes('@') || !username.includes('.') || password.length < 8) {\n//       setError('Invalid username or password.');\n//     } else {\n//       // Mocking authentication\n//       // Replace this with actual authentication logic (e.g., calling an API)\n//       if (username === 'example@email.com' && password === 'password123') {\n//         // Redirect to home page on successful login\n//         console.log('success')\n//         // window.location.href = '/home'; // You can use react-router for better navigation\n//       } else {\n//         setError('Invalid username or password.');\n//       }\n//     }\n//     return(\n//        <div>\n//         <h1>Login</h1>\n//         <form onSubmit={handleLogin}>\n//             <div>\n//                <label htmlFor=\"username\">Username/Email</label>\n//                 <input>\n//                 type=\"email\"\n//                 id=\"username\"\n//                 value={username}\n//                 onChange={(e)=>setUsername(e.target.value)}\n//                 </input>\n//             </div>\n//             <div>\n//                <label htmlFor=\"password\">Password:</label>\n//                 <input>\n//                 type=\"password\"\n//                 id=\"password\"\n//                 value={password}\n//                 onChange={(e)=>setPassword(e.target.value)}\n//                 </input>\n//             </div>\n//             <button type=\"submit\">Login</button>\n//         </form>\n        \n//        </div>\n       \n      \n//     );\n\n// }\n// }\n// export default Login;\nimport React, { useState } from 'react';\n\n// Functional component for Login\nconst Login = () => {\n  // State variables for username, password, and error messages\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  // Function to handle form submission\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    // Validate email format\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(username)) {\n      setError('Invalid email format');\n      return;\n    }\n\n    // Validate password length\n    if (password.length < 8) {\n      setError('Password must be at least 8 characters');\n      return;\n    }\n\n    // Perform authentication logic (You can replace this with your actual authentication logic)\n    // For demonstration purposes, considering a simple check with predefined credentials\n    const validCredentials = {\n      username: 'user@example.com',\n      password: 'password123'\n    };\n\n    if (username === validCredentials.username && password === validCredentials.password) {\n      // Successful login, you can navigate to the Home page or perform other actions\n      console.log('Login successful');\n      // Redirect to the Home page or perform other actions here\n    } else {\n      setError('Invalid username or password');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={handleLogin}>\n        <div>\n          <label htmlFor=\"username\">Username (Email):</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <button type=\"submit\">Login</button>\n      </form>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n    </div>\n  );\n};\n\nexport default Login;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}