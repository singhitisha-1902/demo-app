{"ast":null,"code":"var _jsxFileName = \"/Users/itsingh/Desktop/assignment/user/src/Login.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleLogin = () => {\n    // Simple validation\n    if (!username.includes('@') || !username.includes('.') || password.length < 8) {\n      setError('Invalid username or password.');\n    } else {\n      // Mocking authentication\n      // Replace this with actual authentication logic (e.g., calling an API)\n      if (username === 'example@email.com' && password === 'password123') {\n        // Redirect to home page on successful login\n        console.log('success');\n        // window.location.href = '/home'; // You can use react-router for better navigation\n      } else {\n        setError('Invalid username or password.');\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleLogin,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username/Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              children: [\"type=\\\"email\\\" id=\\\"username\\\" value=\", username, \"onChange=\", e => setUsername(e.target.value)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              children: [\"type=\\\"password\\\" id=\\\"password\\\" value=\", password, \"onChange=\", e => setPassword(e.target.value)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 8\n      }, this)\n    }, void 0, false);\n  };\n};\n_s(Login, \"lABZ+K3zbnEaFQvlduiFXLNOf5A=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","username","setUsername","useState","password","setPassword","error","setError","handleLogin","includes","length","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","e","target","value","type","_c","$RefreshReg$"],"sources":["/Users/itsingh/Desktop/assignment/user/src/Login.js"],"sourcesContent":["import React from 'react';\nconst Login=()=>{\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleLogin = () => {\n    // Simple validation\n    if (!username.includes('@') || !username.includes('.') || password.length < 8) {\n      setError('Invalid username or password.');\n    } else {\n      // Mocking authentication\n      // Replace this with actual authentication logic (e.g., calling an API)\n      if (username === 'example@email.com' && password === 'password123') {\n        // Redirect to home page on successful login\n        console.log('success')\n        // window.location.href = '/home'; // You can use react-router for better navigation\n      } else {\n        setError('Invalid username or password.');\n      }\n    }\n    return(\n       <>\n       <div>\n        <h1>Login</h1>\n        <form onSubmit={handleLogin}>\n            <div>\n               <label htmlFor=\"username\">Username/Email</label>\n                <input>\n                type=\"email\"\n                id=\"username\"\n                value={username}\n                onChange={(e)=>setUsername(e.target.value)}\n                </input>\n            </div>\n            <div>\n               <label htmlFor=\"password\">Password:</label>\n                <input>\n                type=\"password\"\n                id=\"password\"\n                value={password}\n                onChange={(e)=>setPassword(e.target.value)}\n                </input>\n            </div>\n            <button type=\"submit\">Login</button>\n        </form>\n        \n       </div>\n       \n       </>\n    );\n\n}\n}\nexport default Login;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}