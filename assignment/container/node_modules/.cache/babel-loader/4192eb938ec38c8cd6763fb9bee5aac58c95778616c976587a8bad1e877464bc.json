{"ast":null,"code":"var _jsxFileName = \"/Users/itsingh/Desktop/assignment/user/src/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleLogin = () => {\n    // Simple validation\n    if (!username.includes('@') || !username.includes('.') || password.length < 8) {\n      setError('Invalid username or password.');\n    } else {\n      // Mocking authentication\n      // Replace this with actual authentication logic (e.g., calling an API)\n      if (username === 'example@email.com' && password === 'password123') {\n        // Redirect to home page on successful login\n        console.log('success');\n        // window.location.href = '/home'; // You can use react-router for better navigation\n      } else {\n        setError('Invalid username or password.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username/Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          children: [\"type=\\\"email\\\" id=\\\"username\\\" value=\", username, \"onChange=\", e => setUsername(e.target.value)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          children: [\"type=\\\"password\\\" id=\\\"password\\\" value=\", password, \"onChange=\", e => setPassword(e.target.value)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 8\n  }, this);\n};\n_s(Login, \"lABZ+K3zbnEaFQvlduiFXLNOf5A=\");\n_c = Login;\nexport default Login;\n// import React, { useState } from 'react';\n\n// // Functional component for Login\n// const Login = () => {\n//   // State variables for username, password, and error messages\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n\n//   // Function to handle form submission\n//   const handleLogin = (e) => {\n//     e.preventDefault();\n\n//     // Validate email format\n//     const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n//     if (!emailRegex.test(username)) {\n//       setError('Invalid email format');\n//       return;\n//     }\n\n//     // Validate password length\n//     if (password.length < 8) {\n//       setError('Password must be at least 8 characters');\n//       return;\n//     }\n\n//     // Perform authentication logic (You can replace this with your actual authentication logic)\n//     // For demonstration purposes, considering a simple check with predefined credentials\n//     const validCredentials = {\n//       username: 'user@example.com',\n//       password: 'password123'\n//     };\n\n//     if (username === validCredentials.username && password === validCredentials.password) {\n//       // Successful login, you can navigate to the Home page or perform other actions\n//       console.log('Login successful');\n//       // Redirect to the Home page or perform other actions here\n//     } else {\n//       setError('Invalid username or password');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Login</h2>\n//       <form onSubmit={handleLogin}>\n//         <div>\n//           <label htmlFor=\"username\">Username (Email):</label>\n//           <input\n//             type=\"text\"\n//             id=\"username\"\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//           />\n//         </div>\n//         <div>\n//           <label htmlFor=\"password\">Password:</label>\n//           <input\n//             type=\"password\"\n//             id=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//           />\n//         </div>\n//         <button type=\"submit\">Login</button>\n//       </form>\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\n//     </div>\n//   );\n// };\n\n// export default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","error","setError","handleLogin","includes","length","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","e","target","value","type","_c","$RefreshReg$"],"sources":["/Users/itsingh/Desktop/assignment/user/src/Login.js"],"sourcesContent":["import React, {useState} from 'react'\nconst Login = () =>{\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleLogin = () => {\n    // Simple validation\n    if (!username.includes('@') || !username.includes('.') || password.length < 8) {\n      setError('Invalid username or password.');\n    } else {\n      // Mocking authentication\n      // Replace this with actual authentication logic (e.g., calling an API)\n      if (username === 'example@email.com' && password === 'password123') {\n        // Redirect to home page on successful login\n        console.log('success')\n        // window.location.href = '/home'; // You can use react-router for better navigation\n      } else {\n        setError('Invalid username or password.');\n      }\n    }\n}\n    return(\n       <div>\n        <h1>Login</h1>\n        <form onSubmit={handleLogin}>\n            <div>\n               <label htmlFor=\"username\">Username/Email</label>\n                <input>\n                type=\"email\"\n                id=\"username\"\n                value={username}\n                onChange={(e)=>setUsername(e.target.value)}\n                </input>\n            </div>\n            <div>\n               <label htmlFor=\"password\">Password:</label>\n                <input>\n                type=\"password\"\n                id=\"password\"\n                value={password}\n                onChange={(e)=>setPassword(e.target.value)}\n                </input>\n            </div>\n            <button type=\"submit\">Login</button>\n        </form>\n        \n       </div>\n       \n      \n    );\n\n};\n\nexport default Login;\n// import React, { useState } from 'react';\n\n// // Functional component for Login\n// const Login = () => {\n//   // State variables for username, password, and error messages\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n\n//   // Function to handle form submission\n//   const handleLogin = (e) => {\n//     e.preventDefault();\n\n//     // Validate email format\n//     const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n//     if (!emailRegex.test(username)) {\n//       setError('Invalid email format');\n//       return;\n//     }\n\n//     // Validate password length\n//     if (password.length < 8) {\n//       setError('Password must be at least 8 characters');\n//       return;\n//     }\n\n//     // Perform authentication logic (You can replace this with your actual authentication logic)\n//     // For demonstration purposes, considering a simple check with predefined credentials\n//     const validCredentials = {\n//       username: 'user@example.com',\n//       password: 'password123'\n//     };\n\n//     if (username === validCredentials.username && password === validCredentials.password) {\n//       // Successful login, you can navigate to the Home page or perform other actions\n//       console.log('Login successful');\n//       // Redirect to the Home page or perform other actions here\n//     } else {\n//       setError('Invalid username or password');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Login</h2>\n//       <form onSubmit={handleLogin}>\n//         <div>\n//           <label htmlFor=\"username\">Username (Email):</label>\n//           <input\n//             type=\"text\"\n//             id=\"username\"\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//           />\n//         </div>\n//         <div>\n//           <label htmlFor=\"password\">Password:</label>\n//           <input\n//             type=\"password\"\n//             id=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//           />\n//         </div>\n//         <button type=\"submit\">Login</button>\n//       </form>\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\n//     </div>\n//   );\n// };\n\n// export default Login;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}