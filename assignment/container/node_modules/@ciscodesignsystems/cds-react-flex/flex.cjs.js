'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var react = require('react');
var cdsComponentTypes = require('@ciscodesignsystems/cds-component-types');
var cdsComponentUtilities = require('@ciscodesignsystems/cds-component-utilities');
var flex_module = require('./flex.module.cjs.js');

const CDSFlex = /*#__PURE__*/react.forwardRef((props, ref) => {
  const {
    as,
    className,
    align,
    direction,
    gap,
    grow,
    justify,
    margin,
    reverse,
    wrap,
    children,
    style,
    ...rest
  } = props;
  const Component = as || 'div';
  const marginDataAttr = cdsComponentTypes.handleMarginInput(margin);
  const classes = cdsComponentUtilities.cx(flex_module["default"], 'cds-flex', {
    'cds-flex--grow': grow
  }, `cds-margin-top--${marginDataAttr.top}`, `cds-margin-bottom--${marginDataAttr.bottom}`, `cds-margin-right--${marginDataAttr.right}`, `cds-margin-left--${marginDataAttr.left}`, className);
  return jsxRuntime.jsx(Component, {
    className: classes,
    ref: ref,
    style: {
      ...style,
      alignItems: align,
      display: 'flex',
      flexDirection: `${direction === 'horizontal' ? 'row' : 'column'}${reverse ? '-reverse' : ''}`,
      flexWrap: wrap ? 'wrap' : 'nowrap',
      gap: typeof gap === 'string' ? cdsComponentTypes.spacingSizes[gap] : gap,
      justifyContent: justify
    },
    ...rest,
    children: children
  });
});
CDSFlex.displayName = 'CDSFlex';
CDSFlex.defaultProps = {
  align: 'stretch',
  direction: 'horizontal',
  gap: 0,
  grow: false,
  justify: 'flex-start',
  reverse: false,
  wrap: false,
  margin: 0
};

exports.CDSFlex = CDSFlex;
exports["default"] = CDSFlex;
