import { useState, useLayoutEffect } from 'react';

const useIsElementOverflowing = (ref, callback) => {
  const [isOverflow, setIsOverflow] = useState(false);
  useLayoutEffect(() => {
    const element = ref.current;
    if (!element) {
      return undefined;
    }
    const observer = new ResizeObserver(() => {
      const hasOverflow = element.scrollHeight > element.clientHeight;
      setIsOverflow(hasOverflow);
      if (callback) callback(hasOverflow);
    });
    observer.observe(element);
    return () => {
      observer.disconnect();
    };
  }, [callback, ref]);
  return isOverflow;
};

export { useIsElementOverflowing };
