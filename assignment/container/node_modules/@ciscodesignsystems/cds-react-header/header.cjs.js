'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var cdsComponentUtilities = require('@ciscodesignsystems/cds-component-utilities');
var headerLogoLink = require('./components/header-logo-link/header-logo-link.cjs.js');
var header_module = require('./header.module.cjs.js');

const CDSHeader = /*#__PURE__*/React.forwardRef((props, ref) => {
  const {
    as,
    sentiment,
    gradient,
    title,
    logo,
    logoLinkProps,
    logoLink,
    logoLinkTarget,
    children,
    minWidth,
    className,
    ...rest
  } = props;
  const Component = as || 'header';
  return jsxRuntime.jsxs(Component, {
    ref: ref,
    className: cdsComponentUtilities.cx(header_module["default"], 'cds-header', className),
    style: {
      minWidth: minWidth,
      background: gradient === true ? `linear-gradient(90deg, var(--${sentiment}-bg-gradient-start), var(--${sentiment}-bg-gradient-end))` : `var(--${sentiment}-bg-base`
    },
    ...rest,
    children: [jsxRuntime.jsx("div", {
      className: cdsComponentUtilities.cx(header_module["default"], 'cds-header__logo'),
      children: jsxRuntime.jsxs(headerLogoLink.CDSHeaderLogoLink, {
        ...(logoLinkProps !== null && logoLinkProps !== void 0 ? logoLinkProps : {
          href: logoLink,
          target: logoLinkTarget
        }),
        children: [jsxRuntime.jsx("span", {
          "data-testid": "headerLogo",
          className: cdsComponentUtilities.cx(header_module["default"], 'cds-header__logoImage'),
          children: logo
        }), jsxRuntime.jsx("span", {
          className: cdsComponentUtilities.cx(header_module["default"], 'cds-header__title'),
          "data-testid": "headerTitle",
          style: {
            color: `var(--${sentiment}-text-default)`
          },
          children: title
        })]
      })
    }), children]
  });
});
CDSHeader.displayName = 'CDSHeader';
CDSHeader.defaultProps = {
  as: undefined,
  sentiment: 'inverse',
  gradient: true,
  title: 'Product Name',
  logoLink: '#0',
  logoLinkTarget: '_self',
  minWidth: '880px',
  className: '',
  logoLinkProps: undefined
};

exports.CDSHeader = CDSHeader;
