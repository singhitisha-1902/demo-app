import { type ReactNode, type Ref } from 'react';
import type * as RadixNavMenu from '@radix-ui/react-navigation-menu';
import type { TSentimentInteractUsage } from '@ciscodesignsystems/cds-component-types';
import { type CDSButtonSentiment, type CDSButtonVariant } from '@ciscodesignsystems/cds-react-button';
import { type CDSHeaderMenuRowProps } from '../header-menu';
export interface CDSHelpMenuProps {
    /**
     * Aligns the expanded menu content to the left or
     * right of the trigger
     */
    align?: 'left' | 'right';
    /**
     * Content that will be rendered when the trigger
     * is activated
     */
    children: ReactNode;
    /**
     * Sentiment of icon-button trigger
     */
    sentiment?: CDSButtonSentiment;
    /**
     * Variant of icon-button trigger
     */
    variant?: CDSButtonVariant;
    /**
     * A React ref to the content element
     */
    contentRef?: Ref<HTMLDivElement>;
    /**
     * A React ref to the trigger element
     */
    triggerRef?: Ref<HTMLButtonElement>;
}
export declare const CDSHelpMenuRoot: import("react").ForwardRefExoticComponent<CDSHelpMenuProps & import("react").RefAttributes<HTMLDivElement>>;
export interface CDSHelpMenuSectionProps extends CDSHeaderMenuRowProps {
    /**
     * Content that describes the section of links.
     * Usually just a string.
     */
    description?: ReactNode;
}
export declare const CDSHelpMenuSection: import("react").ForwardRefExoticComponent<CDSHelpMenuSectionProps & import("react").RefAttributes<HTMLLIElement>>;
export interface CDSHelpMenuLinkProps extends RadixNavMenu.NavigationMenuLinkProps {
    /**
     * The state in which the link is in, either:
     * active, hover, or disabled
     */
    interact?: TSentimentInteractUsage | null;
}
export declare const CDSHelpMenuLink: import("react").ForwardRefExoticComponent<CDSHelpMenuLinkProps & import("react").RefAttributes<HTMLAnchorElement>>;
export default CDSHelpMenuRoot;
