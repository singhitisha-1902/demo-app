import { type ReactNode, type Ref } from 'react';
import { type CDSButtonSentiment, type CDSButtonVariant } from '@ciscodesignsystems/cds-react-button';
import { type CDSHeaderMenuRowProps } from '../header-menu';
export interface CDSAlertsMenuProps {
    /**
     * Content that will be rendered when the trigger
     * is activated
     */
    children: ReactNode;
    /**
     * Sentiment of icon-button trigger
     */
    sentiment?: CDSButtonSentiment;
    /**
     * Variant of icon-button trigger
     */
    variant?: CDSButtonVariant;
    /**
     * Show alerts count
     */
    alertCount?: boolean;
    /**
     * Alerts count
     */
    alertNumber?: number;
    /**
     * Alerts threshold. Alerts exceeding this will be displayed as `alertThreshold + alertThresholdSymbol`
     */
    alertThreshold?: number;
    /**
     * Symbol to proceed the `alertThreshold` when `alertNumber` exceeds `alertThreshold`
     */
    alertThresholdSymbol?: string;
    /**
     * A React ref to the content element
     */
    contentRef?: Ref<HTMLDivElement>;
    /**
     * A React ref to the trigger element
     */
    triggerRef?: Ref<HTMLButtonElement>;
}
/**
 * The most-parent element of the alerts widget
 */
export declare const CDSAlertsMenuRoot: import("react").ForwardRefExoticComponent<CDSAlertsMenuProps & import("react").RefAttributes<HTMLDivElement>>;
/**
 * Divider that goes between rows of content
 */
export declare const CDSAlertsMenuDivider: import("react").ForwardRefExoticComponent<import("react").RefAttributes<HTMLHRElement>>;
/**
 * Content that goes at the bottom of the Alerts Menu
 */
export declare const CDSAlertsMenuFooter: import("react").ForwardRefExoticComponent<CDSHeaderMenuRowProps & import("react").RefAttributes<HTMLLIElement>>;
export default CDSAlertsMenuRoot;
