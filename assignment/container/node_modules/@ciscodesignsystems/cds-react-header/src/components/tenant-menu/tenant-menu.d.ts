import { type ComponentPropsWithRef, type ReactNode, type Ref } from 'react';
import type { TSentiment } from '@ciscodesignsystems/cds-component-types';
import type { TTenantSwitcherTypes } from '../../types/src';
import { type CDSHeaderMenuRowProps } from '../header-menu';
export interface CDSTenantMenuProps extends ComponentPropsWithRef<'div'> {
    /**
     * Content that will be rendered when the trigger
     * is activated
     */
    children: ReactNode;
    /**
     * A React ref to the content element
     */
    contentRef?: Ref<HTMLDivElement>;
    /**
     * The tenant switcher type to display
     */
    switcherType: TTenantSwitcherTypes;
    /**
     * The username to display in the tenant switcher menu.
     * Accepts `string` and `ReactNode` so that products can pass
     * components in to handle custom truncation
     */
    userName?: string | ReactNode;
    /**
     * The tenant name to display in the tenant switcher menu.
     * Accepts `string` and `ReactNode` so that products can pass
     * components in to handle custom truncation
     */
    tenantName?: string | ReactNode;
    /**
     * The sentiment of the tenant switcher
     */
    sentiment?: TSentiment;
    /**
     * The max width of the tenant menu container
     */
    containerMaxWidth?: string;
    /**
     * Flex attribute control of the tenant menu in your header
     */
    containerFlex?: string;
    /**
     * Width at which the name and tenant name in the tenant menu will truncate with ellipsis
     */
    contentWidth?: string;
    /**
     * Classname to apply to the element
     */
    className?: string;
}
/**
 * The most-parent element of the alerts widget
 */
export declare const CDSTenantMenuRoot: import("react").ForwardRefExoticComponent<Omit<CDSTenantMenuProps, "ref"> & import("react").RefAttributes<HTMLDivElement>>;
interface CDSTenantMenuRowProps extends CDSHeaderMenuRowProps {
    /**
     * The item to be displayed to the left side of alert children.
     */
    leftGutter?: ReactNode;
    /**
     * The item to be displayed to the right side of alert children.
     */
    rightGutter?: ReactNode;
    children: ReactNode;
    truncate?: boolean;
}
export declare const CDSTenantMenuRow: import("react").ForwardRefExoticComponent<CDSTenantMenuRowProps & import("react").RefAttributes<HTMLLIElement>>;
/**
 * Divider that goes between rows of content
 */
export declare const CDSTenantMenuDivider: import("react").ForwardRefExoticComponent<import("react").RefAttributes<HTMLHRElement>>;
/**
 * Content that goes at the bottom of the Alerts Menu
 */
export declare const CDSTenantMenuFooter: import("react").ForwardRefExoticComponent<CDSHeaderMenuRowProps & import("react").RefAttributes<HTMLLIElement>>;
export default CDSTenantMenuRoot;
