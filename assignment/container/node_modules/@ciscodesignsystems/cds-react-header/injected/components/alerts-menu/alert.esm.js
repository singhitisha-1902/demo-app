import { forwardRef } from 'react';
import { WarningCircle, Warning, Info, CheckCircle } from 'phosphor-react';
import { cx } from '@ciscodesignsystems/cds-component-utilities';
import styles from './alert.module.esm.js';
import { jsxs, jsx } from 'react/jsx-runtime';
import { CDSHeaderMenuRow } from '../header-menu/header-menu.esm.js';

function isNotificationSentiment(text) {
  if (!text) {
    return false;
  }
  return text.toLowerCase() === 'negative' || text.toLowerCase() === 'warning' || text.toLowerCase() === 'severe-warning' || text.toLowerCase() === 'info' || text.toLowerCase() === 'positive';
}
const SENTIMENT_ICON_MAP = {
  negative: () => /*#__PURE__*/jsx(WarningCircle, {
    className: cx(styles, 'cds-alert__negative'),
    weight: "fill",
    size: 23
  }),
  warning: () => /*#__PURE__*/jsx(Warning, {
    className: cx(styles, 'cds-alert__warning'),
    weight: "fill",
    size: 23
  }),
  'severe-warning': () => /*#__PURE__*/jsx(Warning, {
    className: cx(styles, 'cds-alert__severe-warning'),
    weight: "fill",
    size: 23
  }),
  info: () => /*#__PURE__*/jsx(Info, {
    className: cx(styles, 'cds-alert__info'),
    weight: "fill",
    size: 23
  }),
  positive: () => /*#__PURE__*/jsx(CheckCircle, {
    className: cx(styles, 'cds-alert__positive'),
    weight: "fill",
    size: 23
  })
};
const CDSAlert = /*#__PURE__*/forwardRef((props, ref) => {
  const {
    children,
    headline,
    leftGutter,
    rightGutter,
    sentiment,
    ...rest
  } = props;
  const SentimentIcon = isNotificationSentiment(sentiment) ? SENTIMENT_ICON_MAP[sentiment] : null;
  return /*#__PURE__*/jsxs(CDSHeaderMenuRow, {
    ref: ref,
    className: cx(styles, 'cds-alert__alert-row'),
    ...rest,
    children: [/*#__PURE__*/jsx("div", {
      className: cx(styles, 'cds-alert__alert-row-gutter cds-alert__alert-row-gutter--left'),
      children: SentimentIcon ? /*#__PURE__*/jsx(SentimentIcon, {}) : leftGutter
    }), /*#__PURE__*/jsxs("div", {
      className: cx(styles, 'cds-alert__alert-row-content'),
      children: [headline && /*#__PURE__*/jsx(CDSAlertHeadline, {
        children: headline
      }), children]
    }), rightGutter ? /*#__PURE__*/jsx("div", {
      className: cx(styles, 'cds-alert__alert-row-gutter cds-alert__alert-row-gutter--right'),
      children: rightGutter
    }) : null]
  });
});
CDSAlert.displayName = 'CDSAlert';
CDSAlert.defaultProps = {
  headline: undefined,
  sentiment: undefined,
  rightGutter: undefined,
  leftGutter: undefined
};
const CDSAlertHeadline = /*#__PURE__*/forwardRef((props, ref) => {
  const {
    children,
    ...rest
  } = props;
  return /*#__PURE__*/jsx("div", {
    className: cx(styles, 'cds-alert__alert-row-headline'),
    ref: ref,
    ...rest,
    children: children
  });
});
CDSAlertHeadline.displayName = 'CDSAlertHeadline';
const CDSAlertLink = /*#__PURE__*/forwardRef((props, ref) => {
  const {
    children,
    ...rest
  } = props;
  return /*#__PURE__*/jsx("a", {
    className: cx(styles, 'cds-alert__alert-row-link'),
    ref: ref,
    ...rest,
    children: children
  });
});
CDSAlertLink.displayName = 'CDSAlertLink';

export { CDSAlert, CDSAlertHeadline, CDSAlertLink };
