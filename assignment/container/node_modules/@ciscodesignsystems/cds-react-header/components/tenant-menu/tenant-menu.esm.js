import { forwardRef } from 'react';
import { cx } from '@ciscodesignsystems/cds-component-utilities';
import { CDSTenantSwitcher } from '../tenant-switcher/tenant-switcher.esm.js';
import styles from './tenant-menu.module.esm.js';
import { jsx, jsxs } from 'react/jsx-runtime';
import { CDSHeaderMenuRoot, CDSHeaderMenuContent, CDSHeaderMenuRow } from '../header-menu/header-menu.esm.js';

// TODO @jjc - add title attribute and make ellipsis optional

/**
 * The most-parent element of the alerts widget
 */
const CDSTenantMenuRoot = /*#__PURE__*/forwardRef((props, ref) => {
  const {
    children,
    contentRef,
    switcherType,
    userName,
    tenantName,
    sentiment,
    containerMaxWidth,
    containerFlex,
    contentWidth,
    className
  } = props;
  return /*#__PURE__*/jsx(CDSHeaderMenuRoot, {
    ref: ref,
    id: "headerTenantMenu",
    containerMaxWidth: containerMaxWidth,
    flex: userName || tenantName ? containerFlex : '',
    trigger: /*#__PURE__*/jsx(CDSTenantSwitcher, {
      switcherType: switcherType,
      sentiment: sentiment,
      userName: userName,
      tenantName: tenantName,
      width: contentWidth
    }),
    className: className,
    children: /*#__PURE__*/jsx(CDSHeaderMenuContent, {
      className: cx(styles, 'cds-tenant-menu'),
      align: "left",
      ref: contentRef,
      children: children
    })
  });
});
CDSTenantMenuRoot.displayName = 'CDSTenantMenuRoot';
const CDSTenantMenuRow = /*#__PURE__*/forwardRef((props, ref) => {
  const {
    children,
    leftGutter,
    rightGutter,
    truncate,
    className,
    ...rest
  } = props;
  const menuRowContentClasses = cx(styles, 'cds-tenant-menu__row__content', {
    'cds-tenant-menu__row__content--truncated': truncate
  });
  return /*#__PURE__*/jsxs(CDSHeaderMenuRow, {
    ref: ref,
    className: cx(styles, 'cds-tenant-menu__row', className),
    ...rest,
    children: [leftGutter ? /*#__PURE__*/jsx("div", {
      className: cx(styles, 'cds-tenant-menu__row__gutter', 'cds-tenant-menu__row__gutter--left'),
      children: leftGutter
    }) : null, /*#__PURE__*/jsx("div", {
      className: menuRowContentClasses,
      children: children
    }), rightGutter ? /*#__PURE__*/jsx("div", {
      className: cx(styles, 'cds-tenant-menu__row__gutter', 'cds-tenant-menu__row__gutter--right'),
      children: rightGutter
    }) : null]
  });
});
CDSTenantMenuRow.displayName = 'CDSTenantMenuRow';
CDSTenantMenuRow.defaultProps = {
  leftGutter: undefined,
  rightGutter: undefined,
  truncate: false
};

/**
 * Divider that goes between rows of content
 */
const CDSTenantMenuDivider = /*#__PURE__*/forwardRef((props, ref) => {
  return /*#__PURE__*/jsx("hr", {
    className: cx(styles, 'cds-tenant-menu__divider'),
    ref: ref,
    ...props
  });
});
CDSTenantMenuDivider.displayName = 'CDSTenantMenuDivider';

/**
 * Content that goes at the bottom of the Alerts Menu
 */
const CDSTenantMenuFooter = /*#__PURE__*/forwardRef((props, ref) => {
  const {
    children,
    className,
    ...rest
  } = props;
  return /*#__PURE__*/jsx(CDSHeaderMenuRow, {
    ref: ref,
    className: cx(styles, 'cds-tenant-menu__footer', className),
    ...rest,
    children: children
  });
});
CDSTenantMenuFooter.displayName = 'CDSTenantMenuFooter';
CDSTenantMenuRoot.defaultProps = {
  sentiment: 'base',
  switcherType: 'combo',
  containerMaxWidth: '220px',
  containerFlex: '1',
  contentRef: undefined,
  userName: 'User Name',
  tenantName: 'Tenant Name',
  contentWidth: '120px',
  className: undefined
};

export { CDSTenantMenuDivider, CDSTenantMenuFooter, CDSTenantMenuRoot, CDSTenantMenuRow, CDSTenantMenuRoot as default };
