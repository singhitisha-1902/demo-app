'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var phosphorReact = require('phosphor-react');
var cdsComponentUtilities = require('@ciscodesignsystems/cds-component-utilities');
var breadcrumb_module = require('../breadcrumb.module.cjs.js');

const CDSBreadcrumbMultiple = ({
  children,
  className,
  ...props
}) => {
  const {
    childArray: [first, ...rest],
    ref,
    visibleItems
  } = cdsComponentUtilities.useOverflow(children, '.cds-breadcrumb__item', 0);
  return jsxRuntime.jsx("nav", {
    className: cdsComponentUtilities.cx(breadcrumb_module["default"], 'cds-breadcrumb', className),
    ...props,
    ref: ref,
    children: jsxRuntime.jsxs("ul", {
      children: [jsxRuntime.jsx("li", {
        className: cdsComponentUtilities.cx(breadcrumb_module["default"], 'cds-breadcrumb__item'),
        children: first
      }), visibleItems < rest.length && jsxRuntime.jsxs("div", {
        className: cdsComponentUtilities.cx(breadcrumb_module["default"], 'cds-breadcrumb__item'),
        children: [jsxRuntime.jsx(phosphorReact.CaretRight, {
          size: 16,
          weight: "bold"
        }), "..."]
      }), rest.slice(-visibleItems).map(current => jsxRuntime.jsxs("li", {
        className: cdsComponentUtilities.cx(breadcrumb_module["default"], 'cds-breadcrumb__item'),
        children: [jsxRuntime.jsx(phosphorReact.CaretRight, {
          size: 16,
          weight: "bold"
        }), current]
      }, typeof current !== 'string' && typeof current !== 'number' && 'key' in current ? current.key : current.toString()))]
    })
  });
};

exports.CDSBreadcrumbMultiple = CDSBreadcrumbMultiple;
