import { type Dispatch, type MutableRefObject, type SetStateAction } from 'react';
import { type UseFloatingReturn, useInteractions } from '@floating-ui/react';
type UseMenuInteractionsProps = {
    activeIndex: number | null;
    allowHover: boolean;
    isNested: boolean;
    isOpen: boolean;
    listItemsRef: MutableRefObject<(HTMLElement | null)[]>;
    nodeId: string;
    setActiveIndex: Dispatch<SetStateAction<number | null>>;
    setIsOpen: Dispatch<SetStateAction<boolean>>;
};
type UseMenuInteractionsReturn = {
    context: UseFloatingReturn<HTMLButtonElement>['context'];
    getFloatingProps: ReturnType<typeof useInteractions>['getFloatingProps'];
    getItemProps: ReturnType<typeof useInteractions>['getItemProps'];
    getReferenceProps: ReturnType<typeof useInteractions>['getReferenceProps'];
    refs: UseFloatingReturn<HTMLButtonElement>['refs'];
    strategy: UseFloatingReturn<HTMLButtonElement>['strategy'];
    x: number | null;
    y: number | null;
};
export declare const useMenuInteractions: ({ activeIndex, allowHover, isNested, isOpen, listItemsRef, nodeId, setActiveIndex, setIsOpen, }: UseMenuInteractionsProps) => UseMenuInteractionsReturn;
export {};
