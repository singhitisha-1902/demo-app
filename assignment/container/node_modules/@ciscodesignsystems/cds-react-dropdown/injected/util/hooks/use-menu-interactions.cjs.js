'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var react = require('@floating-ui/react');
var usePlacement = require('./use-placement.cjs.js');

const useMenuInteractions = ({
  activeIndex,
  allowHover,
  isNested,
  isOpen,
  listItemsRef,
  nodeId,
  setActiveIndex,
  setIsOpen
}) => {
  const placement = usePlacement.usePlacement(isNested);
  const {
    context,
    refs,
    strategy,
    x,
    y
  } = react.useFloating({
    nodeId,
    open: isOpen,
    onOpenChange: setIsOpen,
    strategy: 'fixed',
    placement,
    middleware: [react.offset({
      mainAxis: 4
    }), react.flip(), react.shift()],
    whileElementsMounted: react.autoUpdate
  });
  const hover = react.useHover(context, {
    enabled: isNested && allowHover,
    delay: {
      open: 75
    },
    handleClose: react.safePolygon({
      blockPointerEvents: true
    })
  });
  const click = react.useClick(context, {
    event: 'mousedown',
    toggle: !isNested || !allowHover,
    ignoreMouse: isNested
  });
  const role = react.useRole(context, {
    role: 'menu'
  });
  const dismiss = react.useDismiss(context);
  const listNavigation = react.useListNavigation(context, {
    listRef: listItemsRef,
    activeIndex,
    nested: isNested,
    onNavigate: setActiveIndex
  });
  const {
    getFloatingProps,
    getItemProps,
    getReferenceProps
  } = react.useInteractions([hover, click, role, dismiss, listNavigation]);
  return {
    context,
    getFloatingProps,
    getItemProps,
    getReferenceProps,
    refs,
    strategy,
    x,
    y
  };
};

exports.useMenuInteractions = useMenuInteractions;
