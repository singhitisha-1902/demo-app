import { type ComponentPropsWithRef, type ReactNode } from 'react';
import type { CDSInputSizes, CDSTextInputPasswordProps, CDSTextInputSentimentTypes } from './types';
export interface CDSTextInputProps extends Omit<ComponentPropsWithRef<'input'>, 'size' | 'prefix'>, CDSTextInputPasswordProps {
    /** The size of the input. Can use a predetermined size, or the native HTML
     * "size" attribute
     */
    size?: CDSInputSizes;
    /**
     * The variant of the input to render
     */
    sentiment?: CDSTextInputSentimentTypes;
    /**
     * Determines whether the input field should have border present or not
     */
    bordered?: boolean;
    /**
     * Displays red border around input field if set to true
     */
    invalid?: boolean;
    /**
     * Renders a ReactNode as prefix.
     */
    prefix?: ReactNode;
    /**
     * Renders a ReactNode as suffix.
     */
    suffix?: ReactNode;
    /**
     * If set to false, input will occupy complete width of the parent div.
     */
    fixedWidth?: boolean;
    /**
     * An optional label for the textarea.
     *
     * @default undefined
     */
    label?: string;
    /**
     * If the input is optional (an optional label will be added).
     * If set the string will be used as the optional label.
     *
     * @default undefined
     */
    optional?: boolean | string;
    /**
     * An optional tooltip do display a description for the field.
     *
     * @default undefined
     */
    tooltip?: string;
    /**
     * Determines if we want to show the Clear button or not
     */
    clearable?: boolean;
    /**
     * Function to execute when entered text is cleared.
     */
    onClear?: () => void;
    /**
     * Callback fired when the input frame is clicked.
     */
    onClick?: (event: React.MouseEvent<HTMLInputElement, MouseEvent>) => void;
    /**
     * Callback fired when the input loses focus.
     */
    onBlur?: (event: React.FocusEvent<HTMLInputElement, Element>) => void;
}
export declare const CDSTextInput: import("react").ForwardRefExoticComponent<Omit<CDSTextInputProps, "ref"> & import("react").RefAttributes<HTMLInputElement>>;
export default CDSTextInput;
