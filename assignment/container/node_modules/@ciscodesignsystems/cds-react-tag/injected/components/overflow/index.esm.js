import { forwardRef, Children, isValidElement } from 'react';
import { cx } from '@ciscodesignsystems/cds-component-utilities';
import { CDSTagSelectable } from '../selectable/index.esm.js';
import { CDSTagOverflowDropdown } from './overflow-dropdown.esm.js';
import styles from './overflow.module.esm.js';
import { jsx, jsxs } from 'react/jsx-runtime';

const CDSTagOverflow = /*#__PURE__*/forwardRef((props, ref) => {
  const {
    children,
    className,
    tagCount,
    ...rest
  } = props;
  const childArray = Children.toArray(children);
  const classNames = cx(styles, 'cds-tag__overflow', className);
  const wrappedChildren = childArray.map(child => /*#__PURE__*/jsx("li", {
    children: child
  }, child.key));
  const shown = wrappedChildren.slice(0, tagCount);
  const hidden = childArray.slice(tagCount);
  const selectable = childArray.every(child => /*#__PURE__*/isValidElement(child) && child.type === CDSTagSelectable);
  const tagSize = childArray[0]?.props?.size;
  return /*#__PURE__*/jsxs("ul", {
    className: classNames,
    ref: ref,
    ...rest,
    children: [shown, /*#__PURE__*/jsx(CDSTagOverflowDropdown, {
      hidden: hidden,
      selectable: selectable,
      size: tagSize
    })]
  });
});
CDSTagOverflow.displayName = 'CDSTag.Overflow';
CDSTagOverflow.defaultProps = {
  tagCount: 3
};

export { CDSTagOverflow };
