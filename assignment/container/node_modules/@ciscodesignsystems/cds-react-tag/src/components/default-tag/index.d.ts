import { type ComponentPropsWithRef, type MouseEventHandler, type ReactNode } from 'react';
import { type CDSStatuses } from '@ciscodesignsystems/cds-component-types';
import { type TagSize, type TextAlign } from '../../types';
export interface CDSDefaultTagProps extends ComponentPropsWithRef<'div'> {
    /**
     * Select whether the tag should have dashed border.
     */
    dashed?: boolean;
    /**
     * For adding icon along with text.
     */
    icon?: ReactNode;
    /**
     * Function to execute when close tag button is clicked.
     */
    onClose?: MouseEventHandler<HTMLButtonElement>;
    /**
     * Selects size of tag from predetermined list.
     */
    size?: TagSize;
    /**
     * Aligns text inside the tag.
     */
    textAlign?: TextAlign;
    /**
     * Wrap text based on available width.
     */
    wrap?: boolean;
    /**
     * Select tag status from predetermined list.
     */
    status?: CDSStatuses;
    /**
     * Controls whether the tag is truncated. If a number is provided,
     * it specifies the maximum length of the text before truncation.
     */
    truncated?: boolean | number;
}
export declare const CDSTag: import("react").ForwardRefExoticComponent<Omit<CDSDefaultTagProps, "ref"> & import("react").RefAttributes<HTMLDivElement>>;
