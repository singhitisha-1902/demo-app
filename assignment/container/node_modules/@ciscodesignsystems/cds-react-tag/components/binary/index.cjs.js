'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var react = require('react');
var cdsComponentUtilities = require('@ciscodesignsystems/cds-component-utilities');
var cdsReactIcons = require('@ciscodesignsystems/cds-react-icons');
var index = require('../default-tag/index.cjs.js');
var binary_module = require('./binary.module.cjs.js');

const labelMap = {
  active: 'Active',
  inactive: 'Inactive'
};
const CDSTagBinary = /*#__PURE__*/react.forwardRef((props, ref) => {
  const {
    active,
    className,
    label,
    ...rest
  } = props;
  const classes = cdsComponentUtilities.cx(binary_module["default"], 'cds-tag--binary', `cds-tag--binary--${active ? 'active' : 'inactive'}`, className);
  return jsxRuntime.jsx(index.CDSTag, {
    ...rest,
    ref: ref,
    className: classes,
    icon: active ? jsxRuntime.jsx(cdsReactIcons.IcActive, {}) : jsxRuntime.jsx(cdsReactIcons.IcInactive, {}),
    children: label !== null && label !== void 0 ? label : labelMap[active ? 'active' : 'inactive']
  });
});
CDSTagBinary.displayName = 'CDSTag.Binary';
CDSTagBinary.defaultProps = {
  active: true,
  className: undefined,
  label: undefined,
  size: 'md'
};

exports.CDSTagBinary = CDSTagBinary;
