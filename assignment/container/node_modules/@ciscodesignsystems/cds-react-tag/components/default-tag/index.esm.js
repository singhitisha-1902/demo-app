import { forwardRef } from 'react';
import { X } from 'phosphor-react';
import { cx } from '@ciscodesignsystems/cds-component-utilities';
import { CDSStatusIcon } from '@ciscodesignsystems/cds-react-icons';
import { CDSTooltip } from '@ciscodesignsystems/cds-react-tooltip';
import { CDSTagSizeMap } from '../../types/index.esm.js';
import { truncateText } from '../../util/truncated-text/truncated-text.esm.js';
import defaultTagStyles from './default-tag.module.esm.js';
import { jsx, jsxs } from 'react/jsx-runtime';

const CDSTag = /*#__PURE__*/forwardRef((props, ref) => {
  const {
    children,
    className,
    dashed,
    status,
    onClose,
    size = 'md',
    icon,
    textAlign,
    wrap,
    truncated,
    ...rest
  } = props;
  const classNames = cx(defaultTagStyles, 'cds-tag', `cds-tag--${size}`, {
    'cds-tag--closable': typeof onClose === 'function',
    'cds-tag--dashed': dashed,
    'cds-tag--truncated': truncated,
    'cds-tag--no-wrap': !wrap,
    [`cds-tag--${status}`]: status
  }, className);
  const tagContent = /*#__PURE__*/jsx("div", {
    className: wrap && truncated ? cx(defaultTagStyles, 'cds-tag__children--wrap cds-tag--truncated') : cx(defaultTagStyles, 'cds-tag__children--no-wrap'),
    style: {
      textAlign: textAlign
    },
    children: truncated ? truncateText(children, truncated) : children
  });
  const tagComponentContent = /*#__PURE__*/jsxs("div", {
    className: classNames,
    role: "presentation",
    ref: ref,
    ...rest,
    children: [status ? /*#__PURE__*/jsx(CDSStatusIcon, {
      status: status,
      height: CDSTagSizeMap[size],
      width: CDSTagSizeMap[size]
    }) : icon, tagContent, typeof onClose === 'function' && /*#__PURE__*/jsx("button", {
      className: cx(defaultTagStyles, 'cds-tag--clickable', 'cds-tag__close-icon'),
      onClick: onClose,
      type: "button",
      children: /*#__PURE__*/jsx(X, {
        size: 16,
        weight: "bold"
      })
    })]
  });
  const tagComponent = truncated ? /*#__PURE__*/jsx(CDSTooltip, {
    autoPlacement: true,
    title: children ? children.toString() : '',
    children: tagComponentContent
  }) : tagComponentContent;
  return tagComponent;
});
CDSTag.displayName = 'CDSTag';
CDSTag.defaultProps = {
  dashed: false,
  icon: undefined,
  onClose: undefined,
  textAlign: 'center',
  status: undefined,
  wrap: true,
  truncated: false
};

export { CDSTag };
