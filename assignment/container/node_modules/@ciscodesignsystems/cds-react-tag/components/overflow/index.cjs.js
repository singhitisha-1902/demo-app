'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var react = require('react');
var cdsComponentUtilities = require('@ciscodesignsystems/cds-component-utilities');
var index = require('../selectable/index.cjs.js');
var overflowDropdown = require('./overflow-dropdown.cjs.js');
var overflow_module = require('./overflow.module.cjs.js');

const CDSTagOverflow = /*#__PURE__*/react.forwardRef((props, ref) => {
  var _a, _b;
  const {
    children,
    className,
    tagCount,
    ...rest
  } = props;
  const childArray = react.Children.toArray(children);
  const classNames = cdsComponentUtilities.cx(overflow_module["default"], 'cds-tag__overflow', className);
  const wrappedChildren = childArray.map(child => jsxRuntime.jsx("li", {
    children: child
  }, child.key));
  const shown = wrappedChildren.slice(0, tagCount);
  const hidden = childArray.slice(tagCount);
  const selectable = childArray.every(child => /*#__PURE__*/react.isValidElement(child) && child.type === index.CDSTagSelectable);
  const tagSize = (_b = (_a = childArray[0]) === null || _a === void 0 ? void 0 : _a.props) === null || _b === void 0 ? void 0 : _b.size;
  return jsxRuntime.jsxs("ul", {
    className: classNames,
    ref: ref,
    ...rest,
    children: [shown, jsxRuntime.jsx(overflowDropdown.CDSTagOverflowDropdown, {
      hidden: hidden,
      selectable: selectable,
      size: tagSize
    })]
  });
});
CDSTagOverflow.displayName = 'CDSTag.Overflow';
CDSTagOverflow.defaultProps = {
  tagCount: 3
};

exports.CDSTagOverflow = CDSTagOverflow;
