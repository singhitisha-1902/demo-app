import { useRef, useState, useEffect } from 'react';
import { cx } from '@ciscodesignsystems/cds-component-utilities';
import styles from '../../drawer.module.esm.js';
import { jsxs, jsx } from 'react/jsx-runtime';

const CDSDrawerContent = ({
  children,
  className,
  ...rest
}) => {
  const contentRef = useRef(null);
  const [scrolled, setScrolled] = useState(false);
  const computedClassName = cx(styles, 'cds-drawer__content', {
    'cds-drawer__content--scrolled': scrolled
  }, className);
  useEffect(() => {
    const contentTarget = contentRef.current;
    const options = {
      root: document.querySelector('.cds-drawer__content'),
      threshold: 1.0
    };
    const observer = new IntersectionObserver(([entry]) => {
      setScrolled(entry && !entry.isIntersecting);
    }, options);
    contentTarget && observer.observe(contentTarget);
    return () => {
      contentTarget && observer.unobserve(contentTarget);
    };
  }, [contentRef]);
  return /*#__PURE__*/jsxs("div", {
    className: computedClassName,
    ...rest,
    children: [/*#__PURE__*/jsx("span", {
      ref: contentRef,
      "aria-hidden": true
    }), children]
  });
};
CDSDrawerContent.displayName = 'CDSDrawer.Content';

export { CDSDrawerContent };
