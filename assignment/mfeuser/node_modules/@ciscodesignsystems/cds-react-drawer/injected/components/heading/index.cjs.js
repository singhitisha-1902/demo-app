'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var phosphorReact = require('phosphor-react');
var cdsComponentUtilities = require('@ciscodesignsystems/cds-component-utilities');
var injected = require('@ciscodesignsystems/cds-react-flex/injected');
var index = require('../../util/context/index.cjs.js');
var drawer_module = require('../../drawer.module.cjs.js');

const CDSDrawerHeading = ({
  children,
  className = '',
  ...rest
}) => {
  const {
    onClose
  } = index.useDrawerContext();
  return jsxRuntime.jsxs(injected.CDSFlex, {
    align: "center",
    className: cdsComponentUtilities.cx(drawer_module["default"], `cds-drawer__header ${className}`),
    ...rest,
    children: [jsxRuntime.jsx("h2", {
      className: cdsComponentUtilities.cx(drawer_module["default"], 'cds-drawer__header__content'),
      children: children
    }), onClose && jsxRuntime.jsx("button", {
      "aria-label": "Close Drawer",
      className: cdsComponentUtilities.cx(drawer_module["default"], 'cds-drawer__header__close-button'),
      type: "button",
      onClick: onClose,
      children: jsxRuntime.jsx(phosphorReact.X, {
        size: 20
      })
    })]
  });
};
CDSDrawerHeading.displayName = 'CDSDrawer.Heading';

exports.CDSDrawerHeading = CDSDrawerHeading;
