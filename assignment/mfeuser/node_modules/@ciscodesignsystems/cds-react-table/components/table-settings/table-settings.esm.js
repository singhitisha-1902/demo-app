import { useState, useEffect, useCallback } from 'react';
import { cx } from '@ciscodesignsystems/cds-component-utilities';
import { CDSButton } from '@ciscodesignsystems/cds-react-button';
import { CDSCheckbox } from '@ciscodesignsystems/cds-react-checkbox';
import { CDSDrawer } from '@ciscodesignsystems/cds-react-drawer';
import { CDSFlex } from '@ciscodesignsystems/cds-react-flex';
import { EXCLUDED_COLUMNS } from '../../util/constants.esm.js';
import styles from './table-settings.module.esm.js';
import { jsxs, jsx } from 'react/jsx-runtime';

const CDSTableConfiguration = ({
  table,
  onClose,
  ...rest
}) => {
  const [columns, setColumns] = useState([]);
  useEffect(() => {
    setColumns(table.getAllLeafColumns().filter(column => !EXCLUDED_COLUMNS.includes(column.id) && !column.getIsVisible()));
  }, [table]);
  const handleColumnVisibilityChange = useCallback(columnToAdd => {
    if (columns.filter(column => column.id === columnToAdd.id).length > 0) {
      setColumns([...columns.filter(column => column.id !== columnToAdd.id)]);
      return;
    }
    setColumns([...columns, columnToAdd]);
  }, [columns, setColumns]);
  const updateTableVisibility = useCallback(() => {
    const newVisibilityState = table.getAllLeafColumns().filter(column => !EXCLUDED_COLUMNS.includes(column.id)).reduce((prev, curr) => ({
      ...prev,
      [curr.id]: columns.filter(column => column.id === curr.id).length === 0
    }), {});
    table.setColumnVisibility(newVisibilityState);
  }, [columns, table]);
  return /*#__PURE__*/jsxs(CDSDrawer, {
    onClose: onClose,
    ...rest,
    children: [/*#__PURE__*/jsx(CDSDrawer.Heading, {
      children: "Select columns"
    }), /*#__PURE__*/jsxs(CDSDrawer.Content, {
      children: [/*#__PURE__*/jsx("p", {
        className: cx(styles, 'cds-table__settings-drawer__description'),
        children: "Select columns to display in the table"
      }), /*#__PURE__*/jsx("hr", {
        className: cx(styles, 'cds-table__settings-drawer__divider')
      }), /*#__PURE__*/jsx(CDSFlex, {
        direction: "vertical",
        gap: 4,
        margin: [8, 0],
        className: cx(styles, 'cds-table__settings-drawer__columns'),
        children: table.getAllLeafColumns().filter(column => !EXCLUDED_COLUMNS.includes(column.id)).map(column => {
          return /*#__PURE__*/jsx(CDSCheckbox, {
            id: column.id,
            checked: columns.filter(value => value.id === column.id).length === 0,
            disabled: !column.getCanHide() || column.getIsPinned() !== false,
            onChange: () => {
              handleColumnVisibilityChange(column);
            },
            children: column.columnDef.meta?.columnVisibilityFilterLabel
          }, column.id);
        })
      })]
    }), /*#__PURE__*/jsxs(CDSDrawer.Footer, {
      children: [/*#__PURE__*/jsx(CDSButton, {
        variant: "tertiary",
        onClick: onClose,
        children: "Cancel"
      }), /*#__PURE__*/jsx(CDSButton, {
        variant: "primary",
        onClick: event => {
          updateTableVisibility();
          onClose?.(event);
        },
        children: "Apply"
      })]
    })]
  });
};

export { CDSTableConfiguration };
