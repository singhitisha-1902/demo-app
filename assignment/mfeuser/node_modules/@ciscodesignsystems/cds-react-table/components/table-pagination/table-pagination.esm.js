import { CaretLeft, CaretRight } from 'phosphor-react';
import { cx } from '@ciscodesignsystems/cds-component-utilities';
import { CDSFlex } from '@ciscodesignsystems/cds-react-flex';
import { CDSSelect } from '@ciscodesignsystems/cds-react-select';
import styles from './table-pagination.module.esm.js';
import { jsxs, jsx } from 'react/jsx-runtime';

const CDSTablePaginationButton = ({
  index,
  active = false,
  disabled = false,
  onClick = undefined
}) => {
  const classes = cx(styles, 'cds-table__pagination__button', 'cds-table__pagination__item', {
    'cds-table__pagination__button--active': active
  });
  return /*#__PURE__*/jsx("button", {
    className: classes,
    disabled: disabled,
    onClick: onClick,
    children: index + 1
  }, index);
};
const CDSTablePagination = ({
  table,
  className = undefined,
  paginationConfig
}) => {
  const pages = table.getPageCount();
  const currentPage = table.getState().pagination.pageIndex;
  const computedPageSizeOptions = paginationConfig.pageSizeOptions?.map(value => {
    return {
      value: value.toString(),
      label: value.toString(),
      selected: value === table.getState().pagination.pageSize
    };
  }) || [];
  return /*#__PURE__*/jsxs(CDSFlex, {
    gap: 4,
    margin: [16, 0],
    justify: "flex-end",
    className: className,
    children: [paginationConfig.showPageSizeChanger && computedPageSizeOptions.length > 0 ? /*#__PURE__*/jsxs(CDSFlex, {
      gap: 8,
      justify: "flex-end",
      children: [/*#__PURE__*/jsx("span", {
        className: cx(styles, 'cds-table__pagination__page-size__label'),
        children: "Rows per page"
      }), /*#__PURE__*/jsx(CDSSelect, {
        style: {
          width: 'fit-content'
        },
        options: computedPageSizeOptions,
        value: `${table.getState().pagination.pageSize}`,
        onChange: option => {
          table.setPageSize(Number(option.value));
        }
      })]
    }) : null, /*#__PURE__*/jsx("button", {
      className: cx(styles, 'cds-table__pagination__button', 'cds-table__pagination__button-arrow', 'cds-table__pagination__item'),
      disabled: currentPage === 0 || pages === 0,
      "data-testid": "cds-table-pagination-prev",
      onClick: () => table.setPageIndex(currentPage - 1),
      children: /*#__PURE__*/jsx(CaretLeft, {
        size: 18,
        weight: "bold"
      })
    }), currentPage > 1 && /*#__PURE__*/jsx(CDSTablePaginationButton, {
      index: 0,
      onClick: () => table.setPageIndex(0)
    }), currentPage > 2 && /*#__PURE__*/jsx("div", {
      className: cx(styles, 'cds-table__pagination__item'),
      children: "..."
    }), currentPage !== 0 && /*#__PURE__*/jsx(CDSTablePaginationButton, {
      index: currentPage - 1,
      onClick: () => table.setPageIndex(currentPage - 1)
    }), /*#__PURE__*/jsx(CDSTablePaginationButton, {
      index: currentPage,
      active: true
    }), pages > 0 && currentPage !== pages - 1 && /*#__PURE__*/jsx(CDSTablePaginationButton, {
      index: currentPage + 1,
      onClick: () => table.setPageIndex(currentPage + 1)
    }), currentPage < pages - 3 && /*#__PURE__*/jsx("div", {
      className: cx(styles, 'cds-table__pagination__item'),
      children: "..."
    }), currentPage < pages - 2 && /*#__PURE__*/jsx(CDSTablePaginationButton, {
      index: pages - 1,
      onClick: () => table.setPageIndex(pages - 1)
    }), /*#__PURE__*/jsx("button", {
      className: cx(styles, 'cds-table__pagination__button', 'cds-table__pagination__button-arrow', 'cds-table__pagination__item'),
      "data-testid": "cds-table-pagination-next",
      disabled: currentPage + 1 === pages || pages === 0,
      onClick: () => table.setPageIndex(currentPage + 1),
      children: /*#__PURE__*/jsx(CaretRight, {
        size: 18,
        weight: "bold"
      })
    })]
  });
};

export { CDSTablePagination };
