import { forwardRef } from 'react';
import { flexRender } from '@tanstack/react-table';
import { Triangle } from 'phosphor-react';
import { cx } from '@ciscodesignsystems/cds-component-utilities';
import { CDSFlex } from '@ciscodesignsystems/cds-react-flex';
import { CDSSkeleton } from '@ciscodesignsystems/cds-react-skeleton';
import { getPinnedStatus } from '../../util/getPinnedStatus.esm.js';
import styles from './table-header.module.esm.js';
import { jsx, jsxs } from 'react/jsx-runtime';

const TableHeaderComponent = ({
  header,
  className,
  loading = false,
  pinnedPosition = undefined,
  ...rest
}, ref) => {
  const align = header.column.columnDef.meta?.align ?? 'left';
  const canSort = header.column.getCanSort();
  const sorted = header.column.getIsSorted();
  const {
    isPinned,
    pinnedClasses
  } = getPinnedStatus(header.column);
  const headerClasses = cx(styles, 'cds-table__header', {
    'cds-table__header--sortable': !loading && canSort,
    [`cds-table__header--align-${align}`]: !loading && align,
    [pinnedClasses]: !loading
  }, className);
  const iconClasses = cx(styles, 'cds-table__header__sort-icons', {
    'cds-table__header__sort-icons--asc': sorted === 'asc',
    'cds-table__header__sort-icons--desc': sorted === 'desc'
  });
  return /*#__PURE__*/jsx("th", {
    ref: ref,
    className: headerClasses,
    onClick: header.column.getToggleSortingHandler(),
    style: {
      ...(!loading ? {
        width: header.column.columnDef.size,
        minWidth: header.column.columnDef.minSize,
        maxWidth: header.column.columnDef.maxSize,
        left: isPinned === 'left' ? `${pinnedPosition}px` : undefined,
        right: isPinned === 'right' ? `${pinnedPosition}px` : undefined
      } : {})
    },
    ...rest,
    children: loading ? /*#__PURE__*/jsx(CDSSkeleton, {
      shade: "dark",
      height: "sm"
    }) : /*#__PURE__*/jsxs(CDSFlex, {
      gap: 4,
      children: [/*#__PURE__*/jsx("div", {
        className: cx(styles, 'cds-table__header__title'),
        children: flexRender(header.column.columnDef.header, header.getContext())
      }), canSort && /*#__PURE__*/jsxs(CDSFlex, {
        direction: "vertical",
        justify: "center",
        className: iconClasses,
        children: [/*#__PURE__*/jsx(Triangle, {
          weight: "fill",
          size: 8,
          className: cx(styles, 'cds-table__header__sort-icons__caret-up')
        }), /*#__PURE__*/jsx(Triangle, {
          weight: "fill",
          size: 8,
          className: cx(styles, 'cds-table__header__sort-icons__caret-down')
        })]
      })]
    })
  }, header.id);
};
const TableHeader = /*#__PURE__*/forwardRef(TableHeaderComponent);

export { TableHeader };
