import { forwardRef, useState } from 'react';
import { FunnelSimple } from 'phosphor-react';
import { cx } from '@ciscodesignsystems/cds-component-utilities';
import { CDSButton } from '@ciscodesignsystems/cds-react-button/injected';
import { CDSDrawer } from '@ciscodesignsystems/cds-react-drawer/injected';
import { CDSFlex } from '@ciscodesignsystems/cds-react-flex/injected';
import { CDSTextInput } from '@ciscodesignsystems/cds-react-text-input/injected';
import { useTableContext } from '../../context/index.esm.js';
import styles from './table-filter-bar.module.esm.js';
import { jsxs, jsx, Fragment } from 'react/jsx-runtime';

const CDSTableFilterBar = /*#__PURE__*/forwardRef((props, ref) => {
  const {
    keyFilterChildren,
    filterDrawerChildren,
    showGlobalSearch,
    globalSearchPlaceholder,
    filterDrawerToggleText,
    children,
    className,
    onGlobalSearchChange,
    ...rest
  } = props;
  const [showFilterDrawer, setShowFilterDrawer] = useState(false);
  const {
    globalFilter,
    setGlobalFilter,
    manualPagination
  } = useTableContext();
  const globalSearchOnChangeHandler = event => {
    if (manualPagination) {
      onGlobalSearchChange?.(event);
    }
    setGlobalFilter?.(String(event.target.value));
  };
  const classes = cx(styles, 'cds-table__filter-bar', className);
  return /*#__PURE__*/jsxs(CDSFlex, {
    ...rest,
    className: classes,
    direction: "horizontal",
    gap: "md",
    margin: {
      bottom: 12
    },
    ref: ref,
    children: [showGlobalSearch ? /*#__PURE__*/jsx(CDSTextInput, {
      value: globalFilter,
      onChange: globalSearchOnChangeHandler,
      fixedWidth: true,
      className: cx(styles, 'cds-table-search-input'),
      placeholder: globalSearchPlaceholder
    }) : null, keyFilterChildren, filterDrawerChildren ? /*#__PURE__*/jsxs(Fragment, {
      children: [/*#__PURE__*/jsxs(CDSButton, {
        variant: "tertiary",
        onClick: () => setShowFilterDrawer(prev => !prev),
        children: [/*#__PURE__*/jsx(FunnelSimple, {
          weight: "bold",
          size: 16
        }), filterDrawerToggleText]
      }), /*#__PURE__*/jsxs(CDSDrawer, {
        isOpen: showFilterDrawer,
        onClose: () => setShowFilterDrawer(false),
        children: [/*#__PURE__*/jsx(CDSDrawer.Heading, {
          children: "Filters"
        }), /*#__PURE__*/jsx(CDSDrawer.Content, {
          children: filterDrawerChildren
        })]
      })]
    }) : null, children]
  });
});
CDSTableFilterBar.displayName = 'CDSTable.FilterBar';
CDSTableFilterBar.defaultProps = {
  filterDrawerChildren: undefined,
  filterDrawerToggleText: 'Filters',
  keyFilterChildren: undefined,
  showGlobalSearch: true,
  globalSearchPlaceholder: 'Search',
  children: undefined,
  onGlobalSearchChange: undefined
};

export { CDSTableFilterBar };
