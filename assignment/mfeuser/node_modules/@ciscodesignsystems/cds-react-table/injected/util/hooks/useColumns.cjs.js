'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var react = require('react');
var phosphorReact = require('phosphor-react');
var injected = require('@ciscodesignsystems/cds-react-button/injected');
var tableCellWithExpandedIndicator = require('../../components/table-cell/table-cell-with-expanded-indicator.cjs.js');
var tableCellWithSelectedIndicator = require('../../components/table-cell/table-cell-with-selected-indicator.cjs.js');
var tableHeaderWithSelectedIndicator = require('../../components/table-header/table-header-with-selected-indicator.cjs.js');

const useColumns = ({
  enableReorderRows,
  expandable,
  selectable,
  columns,
  enableColumnsDisplaySettings,
  displaySettingsColumnDef,
  displaySettingsOnClick,
  size
}) => {
  const finalColumnsDef = react.useMemo(() => {
    const settingsColumnSizeMap = new Map([['compact', 38], ['comfy', 46], ['spacious', 54]]);
    return [...(enableReorderRows ? [{
      id: 'row-sort-dnd',
      header: undefined,
      size: 20,
      minSize: 20,
      maxSize: 20,
      enableSorting: false,
      enableResizing: false,
      enablePinning: true,
      meta: {
        align: 'center'
      }
    }] : []), ...(expandable ? [{
      id: 'expand',
      cell: tableCellWithExpandedIndicator.TableCellWithExpandedIndication,
      size: 20,
      minSize: 20,
      maxSize: 20,
      enableSorting: false,
      enableResizing: false,
      enablePinning: true,
      meta: {
        align: 'center'
      }
    }] : []), ...(selectable ? [{
      id: 'select',
      header: tableHeaderWithSelectedIndicator.TableHeaderWithSelectedIndicator,
      cell: tableCellWithSelectedIndicator.TableCellWithSelectedIndicator,
      size: 20,
      minSize: 20,
      maxSize: 20,
      enableSorting: false,
      enableResizing: false,
      enablePinning: true
    }] : []), ...columns, ...(enableColumnsDisplaySettings ? [{
      ...(displaySettingsColumnDef !== null && displaySettingsColumnDef !== void 0 ? displaySettingsColumnDef : {}),
      id: 'settings',
      header: () => jsxRuntime.jsx(injected.CDSButton, {
        variant: "tertiary",
        onClick: displaySettingsOnClick,
        className: "cds-table__header__title__configuration-button",
        children: jsxRuntime.jsx(phosphorReact.Gear, {
          size: 18,
          weight: "bold"
        })
      }),
      size: settingsColumnSizeMap.get(size !== null && size !== void 0 ? size : 'compact'),
      minSize: settingsColumnSizeMap.get(size !== null && size !== void 0 ? size : 'compact'),
      maxSize: settingsColumnSizeMap.get(size !== null && size !== void 0 ? size : 'compact'),
      enableSorting: false,
      enableResizing: false,
      enablePinning: true,
      meta: {
        align: 'right'
      }
    }] : [])];
  }, [enableReorderRows, expandable, selectable, columns, enableColumnsDisplaySettings, displaySettingsColumnDef, displaySettingsOnClick, size]);
  return finalColumnsDef;
};

exports.useColumns = useColumns;
