import { useState, useRef } from 'react';
import { useFloating, offset, size, flip, shift, autoUpdate, useClick, useDismiss, useRole, useListNavigation, useInteractions } from '@floating-ui/react';

const useFloatingSelect = (isOpen, onToggle) => {
  const [activeIndex, setActiveIndex] = useState(null);
  const [selectedIndex, setSelectedIndex] = useState(null);
  const {
    context,
    refs,
    strategy,
    x,
    y
  } = useFloating({
    open: isOpen,
    onOpenChange: onToggle,
    middleware: [offset(4), size({
      apply: ({
        availableHeight,
        elements,
        rects
      }) => {
        Object.assign(elements.floating.style, {
          width: `${rects.reference.width}px`,
          maxHeight: `${Math.max(150, availableHeight)}px`
        });
      }
    }), flip(), shift()],
    whileElementsMounted: autoUpdate
  });
  const listRef = useRef([]);
  const click = useClick(context);
  const dismiss = useDismiss(context, {
    outsidePressEvent: 'click'
  });
  const role = useRole(context, {
    role: 'listbox'
  });
  const listNav = useListNavigation(context, {
    listRef,
    activeIndex,
    selectedIndex,
    onNavigate: setActiveIndex,
    loop: true,
    openOnArrowKeyDown: true
  });
  const {
    getFloatingProps,
    getReferenceProps,
    getItemProps
  } = useInteractions([click, dismiss, role, listNav]);
  return {
    context,
    refs,
    strategy,
    x,
    y,
    getItemProps,
    getFloatingProps,
    getReferenceProps,
    listRef,
    activeIndex,
    selectedIndex,
    setSelectedIndex
  };
};

export { useFloatingSelect };
