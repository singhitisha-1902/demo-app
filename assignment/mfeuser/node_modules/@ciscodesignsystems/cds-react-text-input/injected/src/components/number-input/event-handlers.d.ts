import type { RefObject } from 'react';
type inputValType = string | number | undefined;
export declare const handleDecrease: (max: inputValType, min: inputValType, step: string | number, value: inputValType) => string | number;
export declare const handleIncrease: (max: inputValType, min: inputValType, step: string | number, value: inputValType) => string | number;
export declare const isUpArraowDisabled: (max: inputValType, value: inputValType) => boolean | "" | 0 | undefined;
export declare const isDownArraowDisabled: (min: inputValType, value: inputValType) => boolean | "" | 0 | undefined;
export declare const handleInputBlurEvent: (numberInputRef: RefObject<HTMLInputElement>, event: React.FocusEvent<HTMLInputElement, Element>, onBlur?: ((event: React.FocusEvent<HTMLInputElement, Element>) => void) | undefined) => void;
export declare const handleInputClickEvent: (numberInputRef: RefObject<HTMLInputElement>, event: React.MouseEvent<HTMLInputElement, MouseEvent>, onClick?: ((event: React.MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined) => void;
export {};
