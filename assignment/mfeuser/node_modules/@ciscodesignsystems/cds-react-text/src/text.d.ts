import { type ElementType, type FC, type ReactElement } from 'react';
import { type PolymorphicComponentPropWithRef } from '@ciscodesignsystems/cds-component-types';
import { type CDSTextColor, type CDSTextFontWeight, type CDSTextSize } from './types';
export type CDSTextProps<C extends ElementType> = PolymorphicComponentPropWithRef<C, {
    /**
     * Aligns the text to the left, right, or center. sets the textAlign css property.
     * @default left
     */
    align?: React.CSSProperties['textAlign'];
    /**
     * Sets the color of the text.
     *
     * Accepts `"regular"` and `"light"` presets or any string that gets mapped directly
     * to the CSS `color` attribute.
     *
     * @default regular
     */
    color?: CDSTextColor | string;
    /**
     * Removes any padding added by the tags CSS, <p> in particular.
     * @default false
     */
    compact?: boolean;
    /**
     * Truncate text using ellipsis.
     * @default false
     */
    ellipsis?: boolean;
    /**
     * should the font face be monospace
     *  @default false
     */
    monospace?: boolean;
    /**
     * Size of the text.
     *
     * Example usage:
     *
     * ```tsx
     * <CDSText size="p1">The fox</Text>
     * ```
     *
     * Accepts `p1`, `p2`, `p3`, `p4`, `xxxs`, `xxs`, `xs`, `sm`.
     * Note : The use of t-shirt sizes in the `CDSText` component is deprecated and will be removed in a future release of CDS in order to align terminology between design and engineering. Please use p1 through p4 as they appear in your Figma designs in the inspector tab under the Typography section.
     * @default p3
     */
    size?: CDSTextSize;
    /**
     * The font-weight of the text. Accepts regular, semi-bold, bold. Defaults to regular.
     * @default regular
     */
    weight?: CDSTextFontWeight;
    /**
     * width of the text.
     * @default 'undefined'
     */
    width?: number | string;
}>;
type CDSTextComponent = FC & (<C extends ElementType = 'p'>(props: CDSTextProps<C>) => ReactElement | null);
export declare const CDSText: CDSTextComponent;
export default CDSText;
