import type { DatumValue, ValueFormat } from '@nivo/core';
import type { MinMaxAuto, Orientation, Position } from './';
export type NivoAxisType = 'point' | 'linear' | 'symlog';
export interface CDSChartText {
    fill: string;
}
export interface CDSChartLine {
    stroke: string;
    strokeDasharray?: string;
    strokeWidth: number;
}
export interface NivoScale {
    max: MinMaxAuto;
    min: MinMaxAuto;
    type: 'point' | 'linear' | 'symlog';
}
export interface CDSChartDomain {
    line?: CDSChartLine;
}
export interface CDSChartTicks {
    line?: CDSChartLine;
    text?: CDSChartText;
}
export interface CDSChartAxis {
    domain: CDSChartDomain;
    ticks: CDSChartTicks;
}
export interface CDSChartGrid {
    line?: CDSChartLine;
}
export interface CDSAxisScale {
    fontSize?: number;
    format?: string | ValueFormat<DatumValue>;
    legend?: string;
    legendOffset?: number;
    legendPosition?: Position;
    max: MinMaxAuto;
    min: MinMaxAuto;
    numberFormat?: string | ValueFormat<DatumValue>;
    orientation?: Orientation;
    reverse?: boolean;
    stacked?: boolean;
    tickPadding?: number;
    tickRotation?: number;
    tickSize?: number;
    tickValues?: number | number[];
    type: NivoAxisType;
    values?: (Date[] | string[] | number[]) | number[];
}
export type CDSNivoAxis = Pick<CDSAxisScale, 'tickSize' | 'tickPadding' | 'tickRotation' | 'legend' | 'legendOffset' | 'format' | 'tickValues' | 'fontSize'>;
export interface CDSNivoAxes {
    axisBottom?: CDSNivoAxis;
    axisLeft?: CDSNivoAxis;
    enableGridX: boolean;
    enableGridY: boolean;
    gridXValues?: number[] | string[] | Date[] | number;
    gridYValues?: number[] | string[] | Date[] | number;
    xScale: NivoScale;
    yScale: NivoScale;
}
export interface NivoBarAxes extends Omit<CDSNivoAxes, 'gridXValues' | 'gridYValues'> {
    gridXValues?: number[] | number;
    gridXYalues?: number[] | string[];
}
export interface CDSMergedChartAxes {
    xAxis: CDSAxisScale;
    yAxis: CDSAxisScale;
}
export interface CDSChartAxesProp {
    xAxis?: Partial<CDSAxisScale>;
    yAxis?: Partial<CDSAxisScale>;
}
export interface CDSBarAxisScale extends Omit<CDSAxisScale, 'values'> {
    values?: number[];
}
export interface CDSMergedBarChartAxes {
    xAxis: CDSBarAxisScale;
    yAxis: CDSBarAxisScale;
}
