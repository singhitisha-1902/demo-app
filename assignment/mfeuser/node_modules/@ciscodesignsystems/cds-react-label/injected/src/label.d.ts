/// <reference types="react" />
import { type CDSTextProps } from '@ciscodesignsystems/cds-react-text';
import { type CDSTooltipPlacement } from '@ciscodesignsystems/cds-react-tooltip';
import type { CDSLabelSize } from './types';
export interface CDSLabelProps extends Omit<CDSTextProps<'label'>, 'as' | 'size'> {
    /**
     * Optional property to disable Label component hover.
     *
     * Defaults to `false`.
     */
    disabled?: boolean;
    /**
     * Tooltip text to display with icon/hover combination.
     *
     * Defaults to ''.
     */
    infoMessage?: string;
    /**
     * Whether the field is optional. Marking a field/label optional and required results in a console error.
     * If set the string will be used as the optional label.
     *
     * Defaults to `false`.
     */
    optional?: boolean | string;
    /**
     * Whether the field is required. Marking a field/label optional and required results in a console error.
     *
     * Defaults to `false`.
     */
    required?: boolean;
    /**
     * Size of the `Label`.
     *
     * Accepts sm, md, lg.
     *
     * Defaults to `md`.
     */
    size?: CDSLabelSize;
    /**
     * Set Tooltip display position.
     *
     * Accepts the tooltip placements 'top', 'left', 'right', 'bottom'.
     *
     * Defaults to 'top'.
     */
    tooltipPlacement?: CDSTooltipPlacement;
}
export declare const CDSLabel: import("react").ForwardRefExoticComponent<Omit<CDSLabelProps, "ref"> & import("react").RefAttributes<HTMLLabelElement>>;
export default CDSLabel;
