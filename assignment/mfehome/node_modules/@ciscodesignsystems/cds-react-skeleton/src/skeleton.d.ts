import type { ComponentPropsWithoutRef } from 'react';
import type { CDSSkeletonHeight, CDSSkeletonShade } from './';
export interface CDSSkeletonProps extends ComponentPropsWithoutRef<'div'> {
    /**
     * The size of the skeleton placeholder.
     *
     * `sm`, `md` and `lg` will get your the basic skeletons that are
     * used to indicate loading states of various text elements.
     *
     * If you pass in a number, it becomes the height of the skeleton.
     */
    height?: CDSSkeletonHeight;
    /**
     * Allows for multiple placeholders to be rendered vertically,
     * mimicking multiple lines of text.
     *
     * Defaults to `1` internally since we render a single `Skeleton` by default.
     */
    lines?: number;
    /**
     * Allows for multiple lines of placeholders to be rendered
     * in a oblique decreasing pattern.
     *
     * Defaults to `false`.
     */
    oblique?: boolean;
    /**
     * The shade of the skeleton placeholder.
     *
     * Defaults to `regular`.
     */
    shade?: CDSSkeletonShade;
}
export declare const CDSSkeleton: ({ className, height, lines, oblique, shade, style, ...rest }: CDSSkeletonProps) => import("react/jsx-runtime").JSX.Element;
