'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var react = require('react');
var cdsComponentTypes = require('@ciscodesignsystems/cds-component-types');
var cdsComponentUtilities = require('@ciscodesignsystems/cds-component-utilities');
var container_module = require('./container.module.cjs.js');

const CDSContainer = /*#__PURE__*/react.forwardRef((props, ref) => {
  const {
    background,
    children,
    className,
    margin,
    style,
    ...rest
  } = props;
  const marginDataAttr = cdsComponentTypes.handleMarginInput(margin);
  const classNames = cdsComponentUtilities.cx(container_module["default"], 'cds-container', `cds-container__margin-top--${marginDataAttr.top}`, `cds-container__margin-bottom--${marginDataAttr.bottom}`, `cds-container__margin-right--${marginDataAttr.right}`, `cds-container__margin-left--${marginDataAttr.left}`, className);
  const computedBackground = () => {
    if (background) {
      const {
        image: backgroundImage,
        position: backgroundPosition = 'center',
        repeat: backgroundRepeat = 'no-repeat',
        size: backgroundSize = 'cover'
      } = {
        ...(typeof background === 'string' ? {
          image: background
        } : background)
      };
      return {
        backgroundImage,
        backgroundPosition,
        backgroundRepeat,
        backgroundSize
      };
    }
    return {};
  };
  return jsxRuntime.jsx("div", {
    className: classNames,
    ref: ref,
    style: {
      ...style,
      ...computedBackground()
    },
    ...rest,
    children: children
  });
});
CDSContainer.displayName = 'CDSContainer';
CDSContainer.defaultProps = {
  background: undefined,
  margin: 0
};

exports.CDSContainer = CDSContainer;
exports["default"] = CDSContainer;
