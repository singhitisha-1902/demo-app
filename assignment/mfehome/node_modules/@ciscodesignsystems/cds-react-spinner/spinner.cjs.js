'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var react = require('react');
var cdsComponentTypes = require('@ciscodesignsystems/cds-component-types');
var cdsComponentUtilities = require('@ciscodesignsystems/cds-component-utilities');
var cdsReactIcons = require('@ciscodesignsystems/cds-react-icons');
var spinner_module = require('./spinner.module.cjs.js');

const CDSSpinner = /*#__PURE__*/react.forwardRef((props, ref) => {
  const {
    className,
    size,
    margin,
    label,
    labelPlacement,
    ...rest
  } = props;
  const marginDataAttr = cdsComponentTypes.handleMarginInput(margin);
  const spinnerClassNames = cdsComponentUtilities.cx(spinner_module["default"], 'cds-spinner', `cds-spinner--${size}`, `cds-spinner--${labelPlacement === 'right' ? 'horizontal' : 'vertical'}`, `cds-spinner__margin-top--${marginDataAttr.top}`, `cds-spinner__margin-bottom--${marginDataAttr.bottom}`, `cds-spinner__margin-right--${marginDataAttr.right}`, `cds-spinner__margin-left--${marginDataAttr.left}`, className);
  const spinnerIconClassNames = cdsComponentUtilities.cx(spinner_module["default"], 'cds-spinner__icon', `cds-spinner__icon--${size}`);
  const spinnerLabelClassNames = cdsComponentUtilities.cx(spinner_module["default"], 'cds-spinner__label', `cds-spinner__label--${size}`);
  return jsxRuntime.jsxs("div", {
    className: spinnerClassNames,
    ref: ref,
    ...rest,
    children: [jsxRuntime.jsx(cdsReactIcons.IcSpinner, {
      className: spinnerIconClassNames
    }), label !== '' ? jsxRuntime.jsx("span", {
      className: spinnerLabelClassNames,
      children: label
    }) : null]
  });
});
CDSSpinner.displayName = 'CDSSpinner';
CDSSpinner.defaultProps = {
  size: 'md',
  margin: 0,
  label: '',
  labelPlacement: 'bottom'
};

exports.CDSSpinner = CDSSpinner;
exports["default"] = CDSSpinner;
