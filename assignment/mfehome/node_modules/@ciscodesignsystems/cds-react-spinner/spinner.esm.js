import { forwardRef } from 'react';
import { handleMarginInput } from '@ciscodesignsystems/cds-component-types';
import { cx } from '@ciscodesignsystems/cds-component-utilities';
import { IcSpinner } from '@ciscodesignsystems/cds-react-icons';
import styles from './spinner.module.esm.js';
import { jsxs, jsx } from 'react/jsx-runtime';

const CDSSpinner = /*#__PURE__*/forwardRef((props, ref) => {
  const {
    className,
    size,
    margin,
    label,
    labelPlacement,
    ...rest
  } = props;
  const marginDataAttr = handleMarginInput(margin);
  const spinnerClassNames = cx(styles, 'cds-spinner', `cds-spinner--${size}`, `cds-spinner--${labelPlacement === 'right' ? 'horizontal' : 'vertical'}`, `cds-spinner__margin-top--${marginDataAttr.top}`, `cds-spinner__margin-bottom--${marginDataAttr.bottom}`, `cds-spinner__margin-right--${marginDataAttr.right}`, `cds-spinner__margin-left--${marginDataAttr.left}`, className);
  const spinnerIconClassNames = cx(styles, 'cds-spinner__icon', `cds-spinner__icon--${size}`);
  const spinnerLabelClassNames = cx(styles, 'cds-spinner__label', `cds-spinner__label--${size}`);
  return /*#__PURE__*/jsxs("div", {
    className: spinnerClassNames,
    ref: ref,
    ...rest,
    children: [/*#__PURE__*/jsx(IcSpinner, {
      className: spinnerIconClassNames
    }), label !== '' ? /*#__PURE__*/jsx("span", {
      className: spinnerLabelClassNames,
      children: label
    }) : null]
  });
});
CDSSpinner.displayName = 'CDSSpinner';
CDSSpinner.defaultProps = {
  size: 'md',
  margin: 0,
  label: '',
  labelPlacement: 'bottom'
};

export { CDSSpinner, CDSSpinner as default };
