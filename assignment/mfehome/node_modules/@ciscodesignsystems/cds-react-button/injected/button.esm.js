import { forwardRef } from 'react';
import { cx } from '@ciscodesignsystems/cds-component-utilities';
import { CDSSpinner } from '@ciscodesignsystems/cds-react-spinner/injected';
import { CDSButtonGroup } from './components/button-group/button-group.esm.js';
import styles from './button.module.esm.js';
import { jsx, jsxs } from 'react/jsx-runtime';

const CDSButton = /*#__PURE__*/forwardRef((props, ref) => {
  const {
    as,
    children,
    className,
    icon,
    rightIcon,
    variant,
    sentiment,
    destructive,
    size,
    block,
    loading,
    disabled,
    type,
    ...rest
  } = props;
  const Component = as || 'button';
  const buttonSentiment = destructive ? 'negative' : sentiment;
  const iconOnly = !children && (icon && !rightIcon || !icon && rightIcon);
  const classes = cx(styles, 'cds-button', `cds-button--${buttonSentiment}`, `cds-button--${variant}`, `cds-button--${size}`, {
    'cds-button--icon-only': iconOnly,
    'cds-button--block': block
  }, className);
  const leftIcon = loading ? /*#__PURE__*/jsx(CDSSpinner, {
    className: cx(styles, 'cds-button__loading-spinner')
  }) : icon;
  return /*#__PURE__*/jsxs(Component, {
    ref: ref,
    className: classes,
    type: !type && Component === 'button' ? 'button' : type,
    ...rest,
    disabled: loading || disabled,
    children: [leftIcon, children, rightIcon]
  });
});
CDSButton.displayName = 'CDSButton';
CDSButton.defaultProps = {
  variant: 'primary',
  sentiment: 'interact',
  size: 'md',
  block: false,
  destructive: false,
  icon: undefined,
  rightIcon: undefined,
  loading: false
};
const CDSButtonNamespace = Object.assign(CDSButton, {
  Group: CDSButtonGroup
});
CDSButtonNamespace.displayName = 'CDSButton';

export { CDSButtonNamespace as CDSButton, CDSButton as default };
