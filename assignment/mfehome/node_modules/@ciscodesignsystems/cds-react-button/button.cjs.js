'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var react = require('react');
var cdsComponentUtilities = require('@ciscodesignsystems/cds-component-utilities');
var cdsReactSpinner = require('@ciscodesignsystems/cds-react-spinner');
var buttonGroup = require('./components/button-group/button-group.cjs.js');
var button_module = require('./button.module.cjs.js');

const CDSButton = /*#__PURE__*/react.forwardRef((props, ref) => {
  const {
    as,
    children,
    className,
    icon,
    rightIcon,
    variant,
    sentiment,
    destructive,
    size,
    block,
    loading,
    disabled,
    type,
    ...rest
  } = props;
  const Component = as || 'button';
  const buttonSentiment = destructive ? 'negative' : sentiment;
  const iconOnly = !children && (icon && !rightIcon || !icon && rightIcon);
  const classes = cdsComponentUtilities.cx(button_module["default"], 'cds-button', `cds-button--${buttonSentiment}`, `cds-button--${variant}`, `cds-button--${size}`, {
    'cds-button--icon-only': iconOnly,
    'cds-button--block': block
  }, className);
  const leftIcon = loading ? jsxRuntime.jsx(cdsReactSpinner.CDSSpinner, {
    className: cdsComponentUtilities.cx(button_module["default"], 'cds-button__loading-spinner')
  }) : icon;
  return jsxRuntime.jsxs(Component, {
    ref: ref,
    className: classes,
    type: !type && Component === 'button' ? 'button' : type,
    ...rest,
    disabled: loading || disabled,
    children: [leftIcon, children, rightIcon]
  });
});
CDSButton.displayName = 'CDSButton';
CDSButton.defaultProps = {
  variant: 'primary',
  sentiment: 'interact',
  size: 'md',
  block: false,
  destructive: false,
  icon: undefined,
  rightIcon: undefined,
  loading: false
};
const CDSButtonNamespace = Object.assign(CDSButton, {
  Group: buttonGroup.CDSButtonGroup
});
CDSButtonNamespace.displayName = 'CDSButton';

exports.CDSButton = CDSButtonNamespace;
exports["default"] = CDSButton;
