import { cx } from '@ciscodesignsystems/cds-component-utilities';
import { CDSFlex } from '@ciscodesignsystems/cds-react-flex/injected';
import { CDSLabel } from '@ciscodesignsystems/cds-react-label/injected';
import styles from './input-frame.module.esm.js';
import { jsxs, jsx } from 'react/jsx-runtime';

const CDSInputFrame = ({
  id,
  children,
  prefix,
  suffix,
  size,
  sentiment,
  bordered,
  disabled,
  label,
  optional,
  tooltip,
  className,
  fixedWidth,
  type,
  readOnly,
  required,
  ...rest
}) => {
  const classNames = cx(styles, 'cds-text-input-wrapper', `cds-text-input--${sentiment}`, `cds-text-input--${size}`, {
    'cds-text-input--disabled': disabled,
    'cds-text-input--borderless': !bordered,
    'cds-text-input--fluid': !fixedWidth
  }, className);
  const labelClasses = cx(styles, 'cds-label', `cds-label--${size}`, {
    'cds-label--disabled': disabled
  });
  const wrapperClasses = cx(styles, {
    'cds-text-input--wrap': fixedWidth
  });
  return /*#__PURE__*/jsxs(CDSFlex, {
    direction: "vertical",
    className: wrapperClasses,
    grow: true,
    children: [label && /*#__PURE__*/jsx(CDSLabel, {
      htmlFor: id,
      className: labelClasses,
      required: required,
      optional: optional,
      infoMessage: tooltip,
      children: label
    }), /*#__PURE__*/jsxs("div", {
      className: classNames,
      "data-testid": "test-cds-text-input-component",
      ...rest,
      children: [prefix ? /*#__PURE__*/jsx("span", {
        className: cx(styles, 'cds-text-input__prefix'),
        children: prefix
      }) : '', children, suffix]
    })]
  });
};

export { CDSInputFrame };
